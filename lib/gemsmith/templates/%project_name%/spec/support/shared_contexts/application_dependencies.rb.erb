RSpec.shared_context "with application dependencies" do
<% if settings.build_refinements %>
  using Refinements::Struct
<% end %>

  let(:settings) { <%= settings.project_namespaced_class %>::Container[:settings] }
  let(:logger) { Cogger.new id: "<%= settings.project_name %>", io: StringIO.new, level: :debug }
  let(:io) { StringIO.new }

<% if settings.build_refinements %>
  before do
    settings.with! Etcher.call(<%= settings.project_namespaced_class %>::Container[:registry].remove_loader(1))
    <%= settings.project_namespaced_class %>::Container.stub! logger:, io:
  end
<% else %>
  before { Demo::Container.stub! logger:, io: }
<% end %>

  after { <%= settings.project_namespaced_class %>::Container.restore }
end
